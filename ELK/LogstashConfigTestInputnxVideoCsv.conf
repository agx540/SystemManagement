input {  
	file {
		start_position => "beginning"
		path => "D:/ELK/TestLogs/NAS201_eurotech_blau/streams_logs/_Logs/copy/*.csv"
	}
}

filter{
	csv{
		separator => ";"
		columns => ["Timestamp","FramesreceivedPerS","FrameswrittenPerS","DatareceivedMBitPerS","DatawrittenMBitPerS","GOPsdropped","GOPsdroppedPerS","RTPPaketlost","RTPPaketlostPerS","Cleanupdurationms","MediumspacetotalGB","MediumspaceusedGB","MediumspacefreeGB","Files","Locks","Fileslocked","Filesdeleted","Filesinvalid","Fileerrors","StorageName","StorageIdentifier","_dev_sda_overlall_health","_dev_sda_Raw_Read_Error_Rate","_dev_sda_Throughput_Performance","_dev_sda_Spin_Up_Time","_dev_sda_Start_Stop_Count","_dev_sda_Reallocated_Sector_Ct","_dev_sda_Seek_Error_Rate","_dev_sda_Seek_Time_Performance","_dev_sda_Power_On_Hours","_dev_sda_Spin_Retry_Count","_dev_sda_Power_Cycle_Count","_dev_sda_G_Sense_Error_Rate","_dev_sda_Power_Off_Retract_Count","_dev_sda_Load_Cycle_Count","_dev_sda_Temperature_Celsius","_dev_sda_Temperature_Celsius_Min","_dev_sda_Temperature_Celsius_Max","_dev_sda_Reallocated_Event_Count","_dev_sda_Current_Pending_Sector","_dev_sda_Offline_Uncorrectable","_dev_sda_UDMA_CRC_Error_Count","_dev_sda_Disk_Shift","_dev_sda_Loaded_Hours","_dev_sda_Load_Retry_Count","_dev_sda_Load_Friction","_dev_sda_Load_in_Time","_dev_sda_Head_Flying_Hours","_dev_sdb_overlall_health","_dev_sdb_Raw_Read_Error_Rate","_dev_sdb_Throughput_Performance","_dev_sdb_Spin_Up_Time","_dev_sdb_Start_Stop_Count","_dev_sdb_Reallocated_Sector_Ct","_dev_sdb_Seek_Error_Rate","_dev_sdb_Seek_Time_Performance","_dev_sdb_Power_On_Hours","_dev_sdb_Spin_Retry_Count","_dev_sdb_Power_Cycle_Count","_dev_sdb_G_Sense_Error_Rate","_dev_sdb_Power_Off_Retract_Count","_dev_sdb_Load_Cycle_Count","_dev_sdb_Temperature_Celsius","_dev_sdb_Temperature_Celsius_Min","_dev_sdb_Temperature_Celsius_Max","_dev_sdb_Reallocated_Event_Count","_dev_sdb_Current_Pending_Sector","_dev_sdb_Offline_Uncorrectable","_dev_sdb_UDMA_CRC_Error_Count","_dev_sdb_Disk_Shift","_dev_sdb_Loaded_Hours","_dev_sdb_Load_Retry_Count","_dev_sdb_Load_Friction","_dev_sdb_Load_in_Time","_dev_sdb_Head_Flying_Hours","CPUusr%","CPUsys%","RAMused","RAMfree","Load1Min","Load5Min","Load15Min","tmpfsused","tmpfsavailable","dev_rootused","dev_rootavailable","dev_md3used","dev_md3available","dev_md4used","dev_md4available","dev_mapper_cacheused","dev_mapper_cacheavailable","StartTime","UserProcessorTimemin","PrivilegedProcessorTimemin","TotalProcessorTimemin","HandleCount","ThreadCount","PrivateMemorySize64","WorkingSet","PeakWorkingSet64","VirtualMemorySize","PeakVirtualMemorySize64","PagedMemorySize64","PeakPagedMemorySize64"]
	}	
	if [Timestamp] == "Timestamp" {
		drop { }
	}
	date{
		match => [ "StartTime", "YYYYMMdd-HHmmss" ]
		target => "StartTimenxVideo"
	}
	date{
		match => [ "Timestamp", "YYYYMMdd-HHmmss" ]
		target => "@timestamp"
	}

	mutate {
		gsub => [
			
			"GOPsdropped", "\.", "",
			"GOPsdropped", ",", ".",
			
			"GOPsdroppedPerS", "\.", "",
			"GOPsdroppedPerS", ",", ".",
			
			"RTPPaketlost", "\.", "",
			"RTPPaketlost", ",", ".",
			
			"RTPPaketlostPerS", "\.", "",			
			"RTPPaketlostPerS", ",", ".",
			
			"PrivateMemorySize64", "\.", "",
			"PrivateMemorySize64", ",", ".",
			
			"PeakWorkingSet64", "\.", "",
			"PeakWorkingSet64", ",", ".",

			"Cleanupdurationms", "\.", "",
			"Cleanupdurationms", ",", ".",

			"FramesreceivedPerS", "\.", "",
			"FramesreceivedPerS", ",", ".",

			"FrameswrittenPerS", "\.", "",
			"FrameswrittenPerS", ",", ".",

			"DatareceivedMBitPerS", "\.", "",
			"DatareceivedMBitPerS", ",", ".",
			
			"DatawrittenMBitPerS", "\.", "",
			"DatawrittenMBitPerS", ",", "."
		]
	}

	mutate{
		convert => ["GOPsdropped", "float"]
	}
	mutate{
		convert => ["GOPsdroppedPerS", "float"]
	}
	mutate{
		convert => ["RTPPaketlost", "float"]
	}
	mutate{
		convert => ["RTPPaketlostPerS", "float"]
	}
	mutate{
		convert => ["PrivateMemorySize64", "float"]
	}
	mutate{
		convert => ["PeakWorkingSet64", "float"]
	}
	mutate{
		convert => ["CleanupDurationMs","float"]
	}
	mutate{
		convert => ["FramesReceivedPers","float"]
	}
	mutate{
		convert => ["FramesWrittenPers","float"]
	}
	mutate{
		convert => ["DataReceivedMBitPerS","float"]
	}
	mutate{
		convert => ["DatawrittenMBitPerS","float"]
	}

	
}

output {
	elasticsearch { 
		hosts => ["localhost:9200"]
		index => "logstash-nxvideocsvfile"
		}
}