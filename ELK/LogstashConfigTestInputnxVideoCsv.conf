input {  
	file {
		start_position => "beginning"
		path => "C:/Users/Alexander/Desktop/TestLogs/NAS201_eurotech_blau/streams_logs/_Logs/copy/*.csv"
	}
}

filter{
	csv{
		separator => ";"
		columns => ["Timestamp","Frames received/s","Frames written/s","Data received MBit/s","Data written MBit/s","GOPs dropped","GOPs dropped/s","RTP Paket lost","RTP Paketlost/s","Cleanup duration (ms)","Medium space total (GB)","Medium space used (GB)","Medium space free (GB)","Files","Locks","Files locked","Files deleted","Files invalid","File errors","Storage Name","Storage Identifier","/dev/sda\overlall-health","/dev/sda\Raw_Read_Error_Rate","/dev/sda\Throughput_Performance","/dev/sda\Spin_Up_Time","/dev/sda\Start_Stop_Count","/dev/sda\Reallocated_Sector_Ct","/dev/sda\Seek_Error_Rate","/dev/sda\Seek_Time_Performance","/dev/sda\Power_On_Hours","/dev/sda\Spin_Retry_Count","/dev/sda\Power_Cycle_Count","/dev/sda\G-Sense_Error_Rate","/dev/sda\Power-Off_Retract_Count","/dev/sda\Load_Cycle_Count","/dev/sda\Temperature_Celsius","/dev/sda\Temperature_Celsius_Min","/dev/sda\Temperature_Celsius_Max","/dev/sda\Reallocated_Event_Count","/dev/sda\Current_Pending_Sector","/dev/sda\Offline_Uncorrectable","/dev/sda\UDMA_CRC_Error_Count","/dev/sda\Disk_Shift","/dev/sda\Loaded_Hours","/dev/sda\Load_Retry_Count","/dev/sda\Load_Friction","/dev/sda\Load-in_Time","/dev/sda\Head_Flying_Hours","/dev/sdb\overlall-health","/dev/sdb\Raw_Read_Error_Rate","/dev/sdb\Throughput_Performance","/dev/sdb\Spin_Up_Time","/dev/sdb\Start_Stop_Count","/dev/sdb\Reallocated_Sector_Ct","/dev/sdb\Seek_Error_Rate","/dev/sdb\Seek_Time_Performance","/dev/sdb\Power_On_Hours","/dev/sdb\Spin_Retry_Count","/dev/sdb\Power_Cycle_Count","/dev/sdb\G-Sense_Error_Rate","/dev/sdb\Power-Off_Retract_Count","/dev/sdb\Load_Cycle_Count","/dev/sdb\Temperature_Celsius","/dev/sdb\Temperature_Celsius_Min","/dev/sdb\Temperature_Celsius_Max","/dev/sdb\Reallocated_Event_Count","/dev/sdb\Current_Pending_Sector","/dev/sdb\Offline_Uncorrectable","/dev/sdb\UDMA_CRC_Error_Count","/dev/sdb\Disk_Shift","/dev/sdb\Loaded_Hours","/dev/sdb\Load_Retry_Count","/dev/sdb\Load_Friction","/dev/sdb\Load-in_Time","/dev/sdb\Head_Flying_Hours","CPU usr%","CPU sys%","RAM used","RAM free","Load 1Min","Load 5Min","Load 15Min","tmpfs used","tmpfs available","dev/root used","dev/root available","dev/md3 used","dev/md3 available","dev/md4 used","dev/md4 available","dev/mapper/cache used","dev/mapper/cache available","StartTime","UserProcessorTime (min)","PrivilegedProcessorTime (min)","TotalProcessorTime (min)","Handle Count","Thread Count","PrivateMemorySize64","WorkingSet","PeakWorkingSet64","VirtualMemorySize","PeakVirtualMemorySize64","PagedMemorySize64","PeakPagedMemorySize64"]
	}	
	if [Timestamp] == "Timestamp" {
		drop { }
	}
	date{
		match => [ "StartTime", "YYYYMMdd-HHmmss" ]
		target => "StartTimenxVideo"
	}
	date{
		match => [ "Timestamp", "YYYYMMdd-HHmmss" ]
		target => "@timestamp"
	}

	mutate {
		gsub => [
			
			"GOPs dropped", "\.", "",
			"GOPs dropped", ",", ".",
			
			"GOPs dropped/s", "\.", "",
			"GOPs dropped/s", ",", ".",
			
			"RTP Paket lost", "\.", "",
			"RTP Paket lost", ",", ".",
			
			"RTP Paketlost/s", "\.", "",			
			"RTP Paketlost/s", ",", ".",
			
			"PrivateMemorySize64", "\.", "",
			"PrivateMemorySize64", ",", ".",
			
			"PeakWorkingSet64", "\.", "",
			"PeakWorkingSet64", ",", ".",

			"Cleanup duration (ms)", "\.", "",
			"Cleanup duration (ms)", ",", ".",

			"Frames received/s", "\.", "",
			"Frames received/s", ",", ".",

			"Frames written/s", "\.", "",
			"Frames written/s", ",", ".",

			"Data received MBit/s", "\.", "",
			"Data received MBit/s", ",", ".",
			
			"Data written MBit/s", "\.", "",
			"Data written MBit/s", ",", "."
		]
	}

	mutate{
		convert => ["GOPs dropped", "float"]
	}
	mutate{
		convert => ["GOPs dropped/s", "float"]
	}
	mutate{
		convert => ["RTP Paket lost", "float"]
	}
	mutate{
		convert => ["RTP Paketlost/s", "float"]
	}
	mutate{
		convert => ["PrivateMemorySize64", "float"]
	}
	mutate{
		convert => ["PeakWorkingSet64", "float"]
	}
	mutate{
		convert => ["Cleanup duration (ms)","float"]
	}
	mutate{
		convert => ["Frames received/s","float"]
	}
	mutate{
		convert => ["Frames written/s","float"]
	}
	mutate{
		convert => ["Data received MBit/s","float"]
	}
	mutate{
		convert => ["Data written MBit/s","float"]
	}

	
}

output {
	elasticsearch { 
		host => "localhost"
		index => "logstash-nxvideocsvfile"
		cluster => "ag_es_cluster"
	}
	
}